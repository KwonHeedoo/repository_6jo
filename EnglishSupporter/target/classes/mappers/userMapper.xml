<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scit6jo.web.dao.UserMapper">
	<!-- 로그인 -->
	<select id="selectOne" parameterType="User" resultType="User">
		select 
			userid
			, userpwd
			, nickname
			, email
			, birthdate
			, username
			, usertype
			, to_char(regdate, 'YYYY-MM-DD') as regdate
			, to_char(lastdate, 'yyyy-mm-dd hh24:mi:ss') as lastdate
			, attendnum
			, imgFilePath
		from 
			userlist
		where 
			userid = #{userid}
		<if test="userpwd!=null">
		and 
			userpwd = #{userpwd}
		</if>
	</select>
	
	<!-- 출석일수 + 최종접속일 -->
	<update id="attendNum" parameterType="User">
		update 
			userlist
		set 
			attendnum = case 
		when 
			trunc(lastdate,'dd') <![CDATA[<]]> trunc(sysdate,'dd')
		then 
			attendnum+1
		else 
			attendnum
		end,
			lastdate = sysdate
		where 
			userid = #{userid}
	</update>
	
	<!-- 방문자 등록 -->
	<insert id="visit" parameterType="string">
		insert into
			visitor(
				userid)
		values(
			#{value})
	</insert>
	
	<!-- 블랙리스트 정보 요청 -->
	<select id="blackList" parameterType="string" resultType="User">
		select 
			u.userid as userid
			, u.nickname as nickname
			, u.email as email
			, to_char(u.regdate, 'YYYY-MM-DD') as regdate
			, to_char(u.lastdate, 'yyyy-mm-dd hh24:mi:ss') as lastdate
			, u.attendNum as attendNum
			, nvl(rcount, 0) as reportCount
			, nvl(scount, 0) as sanctionCount
		from 
			userlist u 
		left outer join
			(select 
				reportee
				, count(*) as rcount 
			from 
				report 
			where 
				status = 1
			group by 
				reportee) r
		on 
			u.userid = r.reportee
		left outer join
			(select 
				userid
				, count(*) as scount 
			from 
				sanction 
			group by 
				userid) s
		on 
			u.userid = s.userid
		where 
			rcount is not null
		or 
			scount is not null
		order by 
			<if test="orderByType == 'report'">nvl(rcount, 0) desc</if>
			<if test="orderByType == 'sanction'">nvl(scount, 0) desc</if>
	</select>
	
	<!-- 관리자 리스트 정보 요청 -->
	<select id="adminList" resultType="User">
		select
			userid
			, nickname
			, email
			, to_char(regdate, 'YYYY-MM-DD') as regdate
			, to_char(lastdate, 'yyyy-mm-dd hh24:mi:ss') as lastdate
			, attendNum
		from
			userlist
		where
			usertype = 'admin'
		order by
			regdate
	</select>
	
	<!-- 관리자 페이지 회원 검색 -->
	<select id="searchUser" parameterType="string" resultType="User">
		select 
			userid
			, nickname
			, email
			, to_char(regdate, 'YYYY-MM-DD') as regdate
			, to_char(lastdate, 'yyyy-mm-dd hh24:mi:ss') as lastdate
			, attendNum
			, rcount as reportCount
			, scount as sanctionCount
		from 
			userlist 
			, (select 
				count(*) as rcount 
			from 
				report 
			where 
				status = 1 
			and
				reportee = #{value})
			, (select 
				count(*) as scount 
			from 
				sanction 
			where 
				userid = #{value})
		where 
			userid = #{value}
	</select>
	
	<!-- 유저 계정 사용 일시 정지 -->
	<insert id="sanctionUser" parameterType="string">
		insert into
			sanction(
				sanctionnum
				, userid)
		values(
			sanction_seq.nextVal
			, #{value})
	</insert>
	
	<!-- 유저 계정 사용 정지 해제 -->
	<delete id="cancelSanction" parameterType="int">
		delete from
			sanction
		where
			sanctionnum = #{value}
	</delete>
	
	<!-- 유저 계정이 정지 중인지 체크 -->
	<select id="checkSanction" parameterType="string" resultType="User">
		select
			sanctionnum as attendNum
			, userid
			, to_char(starttime, 'yyyy-mm-dd hh24:mi:ss') as regdate
			, to_char(endtime, 'yyyy-mm-dd hh24:mi:ss') as lastdate
		from
			sanction
		where
			userid = #{value}
		and
			starttime <![CDATA[<=]]> sysdate
		and 
			endtime <![CDATA[>=]]> sysdate
	</select>
	  
	<insert id="insertUser" parameterType="User">
		insert into
			userlist(
				userid
				, userpwd
				, nickname
				, email
				, birthdate
				, username
				, regdate
				, attendNum
				, imgfilepath)
			values(
				#{userid}
				, #{userpwd}
				, #{nickname}
				, #{email}
				, #{birthdate}
				, #{username}
				, sysdate
				, data_seq.nextVal
				, #{imgFilePath})	  
	</insert>
	
	<!-- ID 중복체크 -->
	<select id="idcheck" parameterType="User" resultType="User">
		select 
			userid
		from 
			userlist
		where 
			userid = #{userid}
	</select>
	
	<!-- 닉네임 중복체크 -->
	<select id="nicknameCheck" parameterType="User" resultType="User">
		select 
			nickname 
		from 
			userlist
		where 
			nickname = #{nickname}
	</select>
	 
	<!-- 개인정보 수정 -->  
	<update id="infoUpdate" parameterType="User">
		update 
			userlist
		set 
			username = #{username}
			, nickname = #{nickname}
			, email = #{email}
			, birthdate = #{birthdate}
			, imgFilePath = #{imgFilePath}
		where 
			userid = #{userid} 
		and 
			userpwd = #{userpwd}		
	</update>  
	
	<!-- 비밀번호 수정 -->  
	<update id="pwdChange" parameterType="map">
		update 
			userlist
		set 
			userpwd = #{newpwd}
		where 
			userid = #{userid}
		and 
			userpwd = #{currpwd}		
	</update>  
	
	<!-- 회원탈퇴 -->
	<delete id="unregister" parameterType="User">
		delete from 
			userlist
		where 
			userid = #{userid}
		<if test="userpwd!=null">
		and 
			userpwd = #{userpwd}
		</if>		
	</delete> 
	
	<select id="userInfoPage" resultType="User" parameterType="String">
<<<<<<< HEAD
	select 
		to_char(u.regdate, 'YYYY-MM-DD') regdate
		, to_char(u.lastdate, 'YYYY-MM-DD') lastdate
		, u.attendnum as attendNum
		, b.writecount as writeCount
	from 
		userlist u
	join 
		(select 
			userid
			, count(*) as writecount 
=======
		select 
			u.regdate
			, u.lastdate
			, u.attendnum as attendNum
			, b.writecount as writeCount
>>>>>>> dccc78a19e5ebce3e8206ed9ad7d8ca692fa8970
		from 
			userlist u
		join 
			(select 
				userid
				, count(*) as writecount 
			from 
				matching_board 
			group by 
				userid 
			having 
				userid = #{userid}) b
		on 
			u.userid = b.userid
		where 
			u.userid = #{userid}
	</select>
	
	<!-- 유저의 권한 변경 -->
	<update id="changeAuth" parameterType="User">
		update
			userlist
		set
			usertype = #{usertype}
		where
			userid = #{userid}
	</update>
</mapper>
