<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scit6jo.web.dao.BoardMapper">
	<sql id="basicCols">
		boardnum
		, userid
		, nickname
		, title
		, contents
		, hitcount
		, to_char(regdate, 'YYYY-MM-DD') as regdate
		, status
	</sql>
	
	<!-- 전체 글 개수(검색 필터링 후) -->
	<select id="getTotal" parameterType="map"  resultType="int">
		select
			count(*)
		from
		<choose>
			<when test="boardType == 'matching'">matching_board</when>
			<when test="boardType == 'notice'">notice_board</when>
			<when test="boardType == 'appraise'">appraise_board</when>
		</choose>
		<if test="searchItem != null || searchText != null">
		where
			<!-- #이 아니라 $를쓰면 해당 부분의 값을 ?로 해서 받는 것이 아니라 전달받은 값 자체로 넣음 -->
			${searchItem}
		like
			'%' || #{searchText} || '%'
		and
			status = 0
		</if>
		<if test="constraint != null">
		and
			matchingid is null
		</if>
	</select>
	
	<!-- 현재 페이지 목록(검색 필터링 후) -->
	<select id="boardList" parameterType="map" resultType="Board">
		select
			<include refid="basicCols"/>
			<choose>
				<when test="boardType == 'matching'">
				, matchingid
				, to_char(appointedtime,'YYYY-MM-DD HH24:MI') as appointedTime
				, roomNum
				</when>
				<when test="boardType == 'appraise'">, datanum</when>
			</choose>
		from
		<choose>
			<when test="boardType == 'matching'">matching_board</when>
			<when test="boardType == 'notice'">notice_board</when>
			<when test="boardType == 'appraise'">appraise_board</when>
		</choose>
		where
			status = 0
		<if test="constraint != null">
		and
			matchingid is null
		</if>
		<if test="searchItem != null || searchText != null">
		and
			<!-- #이 아니라 $를쓰면 해당 부분의 값을 ?로 해서 받는 것이 아니라 전달받은 값 자체로 넣음 -->
			${searchItem}
		like 
			'%' || #{searchText} || '%'
		</if>
		order by
			boardnum desc
	</select>
	
	<!-- 공지글 리스트 요청 -->
	<select id="noticeList" parameterType="map" resultType="Board">
		select
			<include refid="basicCols"/>
			<choose>
				<when test="boardType == 'matching'">
				, matchingid
				, to_char(appointedtime,'YYYY-MM-DD HH24:MI') as appointedTime
				, roomNum
				</when>
				<when test="boardType == 'appraise'">, datanum</when>
			</choose>
		from
		<choose>
			<when test="boardType == 'matching'">matching_board</when>
			<when test="boardType == 'notice'">notice_board</when>
			<when test="boardType == 'appraise'">appraise_board</when>
		</choose>
		where
			status = 1
		and
			<![CDATA[rownum <= 3]]>
		order by
			boardnum desc
	</select>
	
	<!-- 게시글 작성 -->
	<insert id="writeBoard" parameterType="map">
		insert into 
		<choose>
			<when test="boardType == 'matching'">matching_board</when>
			<when test="boardType == 'notice'">notice_board</when>
			<when test="boardType == 'appraise'">appraise_board</when>
		</choose>
			( boardnum
			, userid
			, nickname
			, title
			, contents
			, status
			<choose>
				<when test="boardType == 'matching'">, matchingid, appointedTime</when>
				<when test="boardType == 'appraise'">, datanum</when>
			</choose>) 
		values(
			<choose>
				<when test="boardType == 'matching'">matching_board_seq.nextVal</when>
				<when test="boardType == 'notice'">notice_board_seq.nextVal</when>
				<when test="boardType == 'appraise'">appraise_board_seq.nextVal</when>
			</choose>
			, #{board.userid}
			, #{board.nickname}
			, #{board.title}
			, #{board.contents}
			, #{board.status}
			<choose>
				<when test="boardType == 'matching'">
				, #{board.matchingId}
				, to_timestamp(#{board.appointedTime}, 'YYYY-MM-DD"T"HH24:MI')</when>
				<when test="boardType == 'appraise'">, #{board.datanum}</when>
			</choose>)
	</insert>
	
	<!-- 게시글 하나 가져오기 -->
	<select id="selectOne" parameterType="map" resultType="Board">
		select
			<include refid="basicCols"/>
			<choose>
				<when test="boardType == 'matching'">
				, matchingid
				, to_char(appointedtime,'YYYY-MM-DD HH24:MI') as appointedTime
				, roomNum
				</when>
				<when test="boardType == 'appraise'">, datanum</when>
			</choose>
		from
		<choose>
			<when test="boardType == 'matching'">matching_board</when>
			<when test="boardType == 'notice'">notice_board</when>
			<when test="boardType == 'appraise'">appraise_board</when>
		</choose>
		where
			boardnum = #{boardNum}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateHitcount" parameterType="map">
		update 
		<choose>
			<when test="boardType == 'matching'">matching_board</when>
			<when test="boardType == 'notice'">notice_board</when>
			<when test="boardType == 'appraise'">appraise_board</when>
		</choose>
		set
			hitcount = hitcount + 1
		where
			boardnum = #{boardNum}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="deleteBoard" parameterType="map">
		delete from
		<choose>
			<when test="boardType == 'matching'">matching_board</when>
			<when test="boardType == 'notice'">notice_board</when>
			<when test="boardType == 'appraise'">appraise_board</when>
		</choose>
		where
			boardnum = #{boardNum}
	</delete>
	
	<!-- 게시글 수정 -->
	<update id="updateBoard" parameterType="map">
		update
		<choose>
			<when test="boardType == 'matching'">matching_board</when>
			<when test="boardType == 'notice'">notice_board</when>
			<when test="boardType == 'appraise'">appraise_board</when>
		</choose>
		set
			title = #{board.title}
			, contents = #{board.contents}
			, regdate = sysdate
		where
			boardnum = #{board.boardNum}
	</update>
	
	<!-- 게시판에 매칭 여부 추가 -->
	<update id="matching" parameterType="Board">
		update
			matching_board
		set
			matchingid = #{matchingId},
			roomnum = #{roomNum}
		where
			boardnum = #{boardNum}
	</update>
	
	<!-- 게시판에 매칭 여부 취소 -->
	<update id="unmatching" parameterType="Board">
		update
			matching_board
		set
			matchingid = #{matchingId},
			roomnum = #{roomNum}
		where
			boardnum = #{boardNum}
	</update>
	
	<!-- 매칭된 리스트 가져오기 -->
	<select id="roomNumList" parameterType="string" resultType="Board">
		select
			roomnum
			, appointedtime
		from
			matching_board
		where
			(userid = #{value} OR matchingid = #{value}) 
		and 
			appointedtime > sysdate
		order by 
			appointedtime asc
	</select>
	
</mapper>
